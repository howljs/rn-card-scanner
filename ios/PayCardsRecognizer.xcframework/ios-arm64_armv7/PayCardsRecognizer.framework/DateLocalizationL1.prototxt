name: "LocalizationX"
input: "data"
input_dim: 1
input_dim: 1
input_dim: 36
input_dim: 110

layer {
name: "conv1"
type: "Convolution"
bottom: "data"
top: "conv1"
convolution_param {
num_output: 16
kernel_size: 5
stride: 1
weight_filler {
type: "xavier"
}
bias_filler {
type: "constant"
}
}
}
layer {
name: "relu1"
type: "ReLU"
bottom: "conv1"
top: "conv1"
}

layer {
name: "pool1"
type: "Pooling"
bottom: "conv1"
top: "pool1"
pooling_param {
pool: MAX
kernel_size: 2
stride: 2
}
}


layer {
name: "conv2"
type: "Convolution"
bottom: "pool1"
top: "conv2"
convolution_param {
num_output: 16
kernel_size: 3
stride: 1
weight_filler {
type: "xavier"
}
bias_filler {
type: "constant"
}
}
}
layer {
name: "relu2"
type: "ReLU"
bottom: "conv2"
top: "conv2"
}

layer {
name: "pool2"
type: "Pooling"
bottom: "conv2"
top: "pool2"
pooling_param {
pool: MAX
kernel_w: 3
kernel_h: 2
stride: 2
}
}

layer {
name: "conv3"
type: "Convolution"
bottom: "pool2"
top: "conv3"
convolution_param {
num_output: 32
kernel_size: 3
stride: 1
weight_filler {
type: "xavier"
}
bias_filler {
type: "constant"
}
}
}
layer {
name: "relu3"
type: "ReLU"
bottom: "conv3"
top: "conv3"
}

# layer {
#   name: "pool3"
#   type: "Pooling"
#   bottom: "conv3"
#   top: "pool3"
#   pooling_param {
#     pool: MAX
#     kernel_size:2
#     stride: 2
#   }
# }
layer {
name: "conv4"
type: "Convolution"
bottom: "conv3"
top: "conv4"
convolution_param {
num_output: 32
kernel_size: 5
stride: 1
weight_filler {
type: "xavier"
}
bias_filler {
type: "constant"
}
}
}
layer {
name: "relu4"
type: "ReLU"
bottom: "conv4"
top: "conv4"
}
# layer {
#   name: "drop4"
#   type: "Dropout"
#   bottom: "conv4"
#   top: "conv4"
#   dropout_param {
#     dropout_ratio: 0.5
#   }
# }
# layer {
#   name: "pool4"
#   type: "Pooling"
#   bottom: "conv4"
#   top: "pool4"
#   pooling_param {
#     pool: MAX
#     kernel_h:2
#     kernel_w:3
#     stride: 2
#   }
# }

# layer {
#   name: "conv5"
#   type: "Convolution"
#   bottom: "pool4"
#   top: "conv5"
#   convolution_param {
#     num_output: 100
#     kernel_size: 2
#     stride: 1
#     weight_filler {
#       type: "xavier"
#     }
#     bias_filler {
#       type: "constant"
#     }
#   }
# }
# layer {
#   name: "relu5"
#   type: "ReLU"
#   bottom: "conv5"
#   top: "conv5"
# }
# # layer {
# #   name: "drop5"
# #   type: "Dropout"
# #   bottom: "conv5"
# #   top: "conv5"
# #   dropout_param {
# #     dropout_ratio: 0.5
# #   }
# # }

# layer {
#   name: "pool5"
#   type: "Pooling"
#   bottom: "conv5"
#   top: "pool5"
#   pooling_param {
#     pool: MAX
#     kernel_h:1
#     kernel_w:2
#     stride: 2
#   }
# }

# layer {
#   name: "conv6"
#   type: "Convolution"
#   bottom: "pool5"
#   top: "conv6"
#   convolution_param {
#     num_output: 120
#     kernel_w: 2
#     kernel_h: 1
#     stride: 1
#     weight_filler {
#       type: "xavier"
#     }
#     bias_filler {
#       type: "constant"
#     }
#   }
# }
# layer {
#   name: "relu6"
#   type: "ReLU"
#   bottom: "conv6"
#   top: "conv6"
# }

# layer {
#   name: "pool6"
#   type: "Pooling"
#   bottom: "conv6"
#   top: "pool6"
#   pooling_param {
#     pool: MAX
#     kernel_h:1
#     kernel_w:2
#     stride: 2
#   }
# }
# # layer {
# #   name: "drop6"
# #   type: "Dropout"
# #   bottom: "conv6"
# #   top: "conv6"
# #   dropout_param {
# #     dropout_ratio: 0.5
# #   }
# # }

# layer {
#   name: "conv7"
#   type: "Convolution"
#   bottom: "pool6"
#   top: "conv7"
#   convolution_param {
#     num_output: 120
#     kernel_w: 2
#     kernel_h: 1
#     stride: 1
#     weight_filler {
#       type: "xavier"
#     }
#     bias_filler {
#       type: "constant"
#     }
#   }
# }
# layer {
#   name: "relu7"
#   type: "ReLU"
#   bottom: "conv7"
#   top: "conv7"
# }
# # layer {
# #   name: "drop7"
# #   type: "Dropout"
# #   bottom: "conv7"
# #   top: "conv7"
# #   dropout_param {
# #     dropout_ratio: 0.5
# #   }
# # }



layer {
name: "ip1"
type: "InnerProduct"
bottom: "conv4"
top: "ip1"
inner_product_param {
num_output: 256
weight_filler {
type: "xavier"
}
bias_filler {
type: "constant"
}
}
}
layer {
name: "relu9"
type: "ReLU"
bottom: "ip1"
top: "ip1"
}

layer {
name: "ip2"
type: "InnerProduct"
bottom: "ip1"
top: "ip2"
inner_product_param {
num_output: 2
weight_filler {
type: "xavier"
}
bias_filler {
type: "constant"
}
}
}